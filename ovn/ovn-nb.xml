<?xml version="1.0" encoding="utf-8"?>
<database name="ovn-nb" title="OVN Northbound Database">
  <p>
    This database is the interface between OVN and the cloud management system
    (CMS), such as OpenStack, running above it.  The CMS produces almost all of
    the contents of the database.  The <code>ovn-northd</code> program
    monitors the database contents, transforms it, and stores it into the <ref
    db="OVN_Southbound"/> database.
  </p>

  <p>
    We generally speak of ``the'' CMS, but one can imagine scenarios in
    which multiple CMSes manage different parts of an OVN deployment.
  </p>

  <h2>External IDs</h2>

  <p>
    Each of the tables in this database contains a special column, named
    <code>external_ids</code>.  This column has the same form and purpose each
    place it appears.
  </p>

  <dl>
    <dt><code>external_ids</code>: map of string-string pairs</dt>
    <dd>
      Key-value pairs for use by the CMS.  The CMS might use certain pairs, for
      example, to identify entities in its own configuration that correspond to
      those in this database.
    </dd>
  </dl>

  <table name="Logical_Switch" title="L2 logical switch">
    <p>
      Each row represents one L2 logical switch.
    </p>

    <column name="name">
      <p>
        A name for the logical switch.  This name has no special meaning or purpose
        other than to provide convenience for human interaction with the ovn-nb
        database.  There is no requirement for the name to be unique.  The
        logical switch's UUID should be used as the unique identifier.
      </p>
    </column>

    <column name="ports">
      <p>
        The logical ports connected to the logical switch.
      </p>

      <p>
        It is an error for multiple logical switches to include the same
        logical port.
      </p>
    </column>

    <column name="router_port">
      <p>
        The router port to which this logical switch is connected, or empty if
        this logical switch is not connected to any router.  A switch may be
        connected to at most one logical router, but this is not a significant
        restriction because logical routers may be connected into arbitrary
        topologies.
      </p>

      <p>
        It is an error for multiple logical switches to refer to the same
        router port.
      </p>
    </column>

    <column name="acls">
      Access control rules that apply to packets within the logical switch.
    </column>

    <group title="Common Columns">
      <column name="external_ids">
        See <em>External IDs</em> at the beginning of this document.
      </column>
    </group>
  </table>

  <table name="Logical_Port" title="L2 logical switch port">
    <p>
      A port within an L2 logical switch.
    </p>

    <column name="name">
      <p>
      The logical port name.
      </p>

      <p>
      For entities (VMs or containers) that are spawned in the hypervisor,
      the name used here must match those used in the <ref key="iface-id"
      table="Interface" column="external_ids" db="Open_vSwitch"/> in the
      <ref db="Open_vSwitch"/> database's <ref table="Interface"
      db="Open_vSwitch"/> table, because hypervisors use <ref key="iface-id"
      table="Interface" column="external_ids" db="Open_vSwitch"/> as a lookup
      key to identify the network interface of that entity.
      </p>

      <p>
      For containers that are spawned inside a VM, the name can be
      any unique identifier.  In such a case, <ref column="parent_name"/>
      must be populated.
      </p>
    </column>

    <column name="type">
      <p>
      Specify a type for this logical port.  Logical ports can be used to model
      other types of connectivity into an OVN logical switch.  Leaving this column
      blank maintains the default logical port behavior.
      </p>

      <p>
        When this column is set to <code>localnet</code>, this logical port
        represents a connection to a locally accessible network from each
        <code>ovn-controller</code> instance.  A logical switch can only have a
        single <code>localnet</code> port attached and at most one regular
        logical port.  This is used to model direct connectivity to an existing
        network.
      </p>
    </column>

    <column name="options">
      <p>
        This column provides key/value settings specific to the logical port
        <ref column="type"/>.
      </p>

      <p>
        When <ref column="type"/> is set to <code>localnet</code>, you must set
        the option <code>network_name</code>.  <code>ovn-controller</code> uses
        local configuration to determine exactly how to connect to this locally
        accessible network.
      </p>
    </column>

    <column name="parent_name">
      When <ref column="name"/> identifies the interface of a container
      spawned inside a tenant VM, this column represents the VM interface
      through which the container interface sends its network traffic.
      The name used here must match those used in the <ref key="iface-id"
      table="Interface" column="external_ids" db="Open_vSwitch"/> in the
      <ref db="Open_vSwitch"/> table, because hypervisors in this case use
      <ref key="iface-id" table="Interface" column="external_ids"
      db="Open_vSwitch"/> as a lookup key to identify the network interface
      of the tenant VM.
    </column>

    <column name="tag">
      When <ref column="name"/> identifies the interface of a container
      spawned inside a tenant VM, this column identifies the VLAN tag in
      the network traffic associated with that container's network interface.
      When there are multiple container interfaces inside a VM, all of
      them send their network traffic through a single VM network interface and
      this value helps OVN identify the correct container interface.
    </column>

    <column name="up">
      This column is populated by <code>ovn-northd</code>, rather than by
      the CMS plugin as is most of this database.  When a logical port is bound
      to a physical location in the OVN Southbound database <ref
      db="OVN_Southbound" table="Binding"/> table, <code>ovn-northd</code>
      sets this column to <code>true</code>; otherwise, or if the port
      becomes unbound later, it sets it to <code>false</code>.  This
      allows the CMS to wait for a VM's (or container's) networking to
      become active before it allows the VM (or container) to start.
    </column>

    <column name="enabled">
      This column is used to administratively set port state.  If this column is
      empty or is set to <code>true</code>, the port is enabled.  If this column
      is set to <code>false</code>, the port is disabled.  A disabled port has all
      ingress and egress traffic dropped.
    </column>

    <column name="macs">
      The logical port's own Ethernet address or addresses, each in the form
      <var>xx</var>:<var>xx</var>:<var>xx</var>:<var>xx</var>:<var>xx</var>:<var>xx</var>.
      Like a physical Ethernet NIC, a logical port ordinarily has a single
      fixed Ethernet address.  The string <code>unknown</code> is also allowed
      to indicate that the logical port has an unknown set of (additional)
      source addresses.
    </column>

    <column name="port_security">
      <p>
        This column controls the addresses from which the host attached to the
        logical port (``the host'') is allowed to send packets and to which it
        is allowed to receive packets.  If this column is empty, all addresses
        are permitted.
      </p>

      <p>
        Each element in the set must contain one or more Ethernet addresses,
        optionally masked.  An element that contains only Ethernet addresses
        restricts the host to sending packets from and receiving packets to
        those addresses.  It also restricts the inner source MAC addresses that
        the host may send in ARP and IPv6 Neighbor Discovery packets.  It does
        not restrict the logical port to any particular L3 addresses.  The host
        is always allowed to receive packets to multicast and broadcast
        Ethernet addresses.
      </p>

      <p>
        Each element in the set may additionally contain one or more IPv4 or
        IPv6 addresses (or both), with optional masks.  If a mask is given, it
        must be a CIDR mask.  In addition to the restrictions described for
        Ethernet addresses above, such an element restricts the IPv4 or IPv6
        addresses from the host may send and to which it may receive to packets
        to the specified addresses.  A masked address, if the host part is
        zero, indicates that the host is allowed to use any addresses in the
        subnet; if the host part is nonzero, the mask simply indicates the size
        of the subnet.  In addition:
      </p>

      <ul>
        <li>
          <p>
            If any IPv4 address is given, the host is also allowed to receive
            packets to the IPv4 local broadcast address 255.255.255.255 and to
            IPv4 multicast addresses (224.0.0.0/4).  If an IPv4 address with a
            mask is given, the host is also allowed to receive packets to the
            broadcast address in that specified subnet.
          </p>

          <p>
            If any IPv4 address is given, the host is additionally restricted
            to sending ARP packets with the specified source IPv4 address.
            (RARP is not restricted.)
          </p>
        </li>

        <li>
          <p>
            If any IPv6 address is given, the host is also allowed to receive
            packets to IPv6 multicast addresses (ff00::/8).
          </p>

          <p>
            If any IPv6 address is given, the host is additionally restricted
            to sending IPv6 Neighbor Discovery Solicitation or Advertisement
            packets with the specified source address or, for solicitations,
            the unspecified address.
          </p>
        </li>
      </ul>

      <p>
        If an element includes an IPv4 address, but no IPv6 addresses, then
        IPv6 traffic is not allowed.  If an element includes an IPv6 address,
        but no IPv4 address, then IPv4 and ARP traffic is not allowed.
      </p>

      <p>
        Multiple elements act as a disjunction.  That is, when multiple
        elements exist, any packet that would be permitted by any individual
        element, as described above, is permitted by the overall policy.
      </p>

      <p>
        This column uses the same lexical syntax as the <ref column="match"
        table="Pipeline" db="OVN_Southbound"/> column in the OVN Southbound
        database's <ref table="Pipeline" db="OVN_Southbound"/> table.  Multiple
        addresses within an element may be space or comma separated.
      </p>

      <p>
        This column is provided as a convenience to cloud management systems,
        but all of the features that it implements can be implemented as ACLs
        using the <ref table="ACL"/> table.
      </p>

      <p>
        Examples:
      </p>
      
      <dl>
        <dt><code>80:fa:5b:06:72:b7</code></dt>
        <dd>
          The host may send traffic from and receive traffic to the specified
          MAC address, and to receive traffic to Ethernet multicast and
          broadcast addresses, but not otherwise.  The host may not send ARP or
          IPv6 Neighbor Discovery packets with inner source Ethernet addresses
          other than the one specified.
        </dd>
        
        <dt><code>00:23:20:00:00:00/ff:ff:ff:00:00:00</code></dt>
        <dd>
          Similar to the first example, except that any Ethernet address in the
          Nicira OUI is allowed.
        </dd>

        <dt><code>80:fa:5b:06:72:b7 192.168.1.10/24</code></dt>
        <dd>
          This adds further restrictions to the first example.  The host may
          send IPv4 packets from or receive IPv4 packets to only 192.168.1.10,
          except that it may also receive IPv4 packets to 192.168.1.255 (based
          on the subnet mask), 255.255.255.255, and any address n 224.0.0.0/4.
          The host may not send ARPs with a source Ethernet address other than
          80:fa:5b:06:72:b7 or source IPv4 address other than 192.168.1.10.
          The host may not send or receive any IPv6 (including IPv6 Neighbor
          Discovery) traffic.
        </dd>
      </dl>
    </column>

    <group title="Common Columns">
      <column name="external_ids">
        See <em>External IDs</em> at the beginning of this document.
      </column>
    </group>
  </table>

  <table name="ACL" title="Access Control List (ACL) rule">
    <p>
      Each row in this table represents one ACL rule for a logical switch
      that points to it through its <ref column="acls"/> column.  The <ref
      column="action"/> column for the highest-<ref column="priority"/>
      matching row in this table determines a packet's treatment.  If no row
      matches, packets are allowed by default.  (Default-deny treatment is
      possible: add a rule with <ref column="priority"/> 1, <code>1</code> as
      <ref column="match"/>, and <code>deny</code> as <ref column="action"/>.)
    </p>

    <column name="priority">
      The ACL rule's priority.  Rules with numerically higher priority take
      precedence over those with lower.  If two ACL rules with the same
      priority both match, then the one actually applied to a packet is
      undefined.
    </column>

    <column name="match">
      The packets that the ACL should match, in the same expression language
      used for the <ref column="match" table="Logical_Flow"
      db="OVN_Southbound"/> column in the OVN Southbound database's <ref
      table="Logical_Flow" db="OVN_Southbound"/> table.  Match
      <code>inport</code> and <code>outport</code> against names of logical
      ports within <ref column="lswitch"/> to implement ingress and egress
      ACLs, respectively.  In logical switches connected to logical routers,
      the special port name <code>ROUTER</code> refers to the logical router
      port.
    </column>

    <column name="action">
      <p>The action to take when the ACL rule matches:</p>
      
      <ul>
        <li>
          <code>allow</code>: Forward the packet.
        </li>

        <li>
          <code>allow-related</code>: Forward the packet and related traffic
          (e.g. inbound replies to an outbound connection).
        </li>

        <li>
          <code>drop</code>: Silently drop the packet.
        </li>

        <li>
          <code>reject</code>: Drop the packet, replying with a RST for TCP or
          ICMP unreachable message for other IP-based protocols.
        </li>
      </ul>

      <p>
	Only <code>allow</code> and <code>drop</code> are implemented:
	<code>allow-related</code> is currently treated as <code>allow</code>,
	and <code>reject</code> as <code>drop</code>.
      </p>
    </column>

    <column name="log">
      <p>
	If set to <code>true</code>, packets that match the ACL will trigger a
	log message on the transport node or nodes that perform ACL processing.
	Logging may be combined with any <ref column="action"/>.
      </p>

      <p>
	Logging is not yet implemented.
      </p>
    </column>

    <group title="Common Columns">
      <column name="external_ids">
        See <em>External IDs</em> at the beginning of this document.
      </column>
    </group>
  </table>

  <table name="Logical_Router" title="L3 logical router">
    <p>
      Each row represents one L3 logical router.
    </p>

    <column name="name">
      <p>
        A name for the logical router.  This name has no special meaning or purpose
        other than to provide convenience for human interaction with the ovn-nb
        database.  There is no requirement for the name to be unique.  The
        logical router's UUID should be used as the unique identifier.
      </p>
    </column>

    <column name="ports">
      The router's ports.  This is a set of weak references, so a <ref
      table="Logical_Switch"/> must also refer to any given <ref
      table="Logical_Router_Port"/> or it will automatically be deleted.
    </column>

    <column name="default_gw">
      IP address to use as default gateway, if any.
    </column>

    <group title="Common Columns">
      <column name="external_ids">
        See <em>External IDs</em> at the beginning of this document.
      </column>
    </group>
  </table>

  <table name="Logical_Router_Port" title="L3 logical router port">
    <p>
      A port within an L3 logical router.
    </p>

    <p>
      A router port is always attached to a logical switch and to a logical
      router.  The former attachment, which is enforced by the database schema,
      can be identified by finding the <ref table="Logical_Switch"/> row whose
      <ref column="router_port" table="Logical_Switch"/> column points to the
      router port.  The latter attachment, which the database schema does not
      enforce, can be identified by finding the <ref table="Logical_Router"/>
      row whose <ref column="ports" table="Logical_Router"/> column includes
      the router port.
    </p>

    <column name="name">
      <p>
        A name for the logical router port.  This name has no special meaning or purpose
        other than to provide convenience for human interaction with the ovn-nb
        database.  There is no requirement for the name to be unique.  The
        logical router port's UUID should be used as the unique identifier.
      </p>
    </column>

    <column name="network">
      The IP address of the router and the netmask.  For example,
      <code>192.168.0.1/24</code> indicates that the router's IP address is
      192.168.0.1 and that packets destined to 192.168.0.<var>x</var> should be
      routed to this port.
    </column>

    <column name="mac">
      The Ethernet address that belongs to this router port.
    </column>

    <group title="Common Columns">
      <column name="external_ids">
        See <em>External IDs</em> at the beginning of this document.
      </column>
    </group>
  </table>
</database>
